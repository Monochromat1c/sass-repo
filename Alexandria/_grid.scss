@use "sass:math";

$grid-column: 12;
$grid-gap: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
);

$layout-value: flex-start, flex-end, center, space-between, space-around;


// Base layout classes
.kld--container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    box-sizing: border-box;
}

.kld--row {
    display: flex;
    flex-flow: row wrap;
}

// Grid gap
@each $key, $val in $grid-gap {
    .kld--gap-#{$key} > * {
        padding: $val;
    }
    .kld--gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

// Justify content class
@each $val in $layout-value {
    .kld--justify-#{$val} {
        justify-content: $val;
    }
}

// Column classes
@include extra-small {
    @for $i from 1 through $grid-column {
        .kld--column-#{$i}-extra-small {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-column);
        }
    }
}
@include small {
    @for $i from 1 through $grid-column {
        .kld--column-#{$i}-small {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-column);
        }
    }
}
@include medium {
    @for $i from 1 through $grid-column {
        .kld--column-#{$i}-medium {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-column);
        }
    }
}
@include large {
    @for $i from 1 through $grid-column {
        .kld--column-#{$i}-large {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-column);
        }
    }
}
@include extra-large {
    @for $i from 1 through $grid-column {
        .kld--column-#{$i}-extra-large {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-column);
        }
    }
}